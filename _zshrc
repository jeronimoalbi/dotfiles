export ZSH_DISABLE_COMPFIX=true

export HOMEBREWED="/opt/homebrew/opt/coreutils/libexec/gnubin"
export GOPATH=$HOME/go
export PATH="./node_modules/.bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="$GOPATH/bin:$HOMEBREWED:$HOME/.poetry/bin:$HOME/bin:$PATH"

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"
#ZSH_THEME="candy"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
#
# zsh-autosuggestion
# git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions
#
# zsh-syntax-highlighting
# git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
#
# zsh-bat
# git clone https://github.com/fdellwing/zsh-bat.git $ZSH_CUSTOM/plugins/zsh-bat
# brew install bat
#
plugins=(git golang vi-mode encode64 rust zsh-autosuggestions zsh-syntax-highlighting zsh-bat)

source $ZSH/oh-my-zsh.sh

bindkey -M isearch '^R' history-incremental-search-backward
bindkey -M isearch '^S' history-incremental-search-forward
bindkey -M vicmd '^R' history-incremental-search-backward
bindkey -M vicmd '^S' history-incremental-search-forward
bindkey -v

export EDITOR=nvim
export LS_COLORS=$LS_COLORS:'*.pyc=0;30'
export PIPENV_VENV_IN_PROJECT=1
export GPG_TTY=$(tty)

# THis fixes the ":CheckHealth" command in neovim to detech the virtualenv without any warnings
# if [[ -n $VIRTUAL_ENV && -e "${VIRTUAL_ENV}/bin/activate" ]]; then
#   source "${VIRTUAL_ENV}/bin/activate"
# fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
test -e "${HOME}/Library/Python/3.9/bin" && export PATH="$HOME/Library/Python/3.9/bin:$PATH"

autoload -U compinit; compinit

# Prepare Nodejs
export NVM_DIR="$HOME/.nvm"
# export LDFLAGS="-L/usr/local/opt/node@16/lib"
# export CPPFLAGS="-I/usr/local/opt/node@16/include"

[ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# Use the global pyenv version of Python
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# Use GNU Tar instead of the BSD one.
# Requires: brew install gnu-tar
PATH="$(brew --prefix)/opt/gnu-tar/libexec/gnubin:$PATH"

export PATH=$HOME/go/bin:/usr/local/go/bin:$PATH
